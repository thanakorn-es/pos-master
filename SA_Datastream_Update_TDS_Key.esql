

CREATE COMPUTE MODULE SA_Datastream_Update_TDS_Key
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		UPDATE Database.MINORDB.db2inst1.M_STORESTAT as MSS SET DS_ID = InputRoot.JSON.Data.id WHERE MSS.DS_ID = -2; 
		COMMIT;
		
		DECLARE my_credentials ROW;
		-- SET my_credentials.Item[] = (SELECT CC.SYSTEM_KEY AS SYSTEM_KEY FROM Database.MINORDB.db2inst1.C_CREDENTIALS AS CC, Database.MINORDB.db2inst1.C_ENVIRONMENT AS CE WHERE CC.SYSTEM_CODE = CE.REFCODE AND CE.REFCODE = 'TNDD1' AND CE.FLAG = 1 );	
		SET my_credentials.Item[] = (SELECT CC.SYSTEM_KEY AS SYSTEM_KEY FROM Database.MINORDB.db2inst1.C_CREDENTIALS AS CC, Database.MINORDB.db2inst1.C_ENVIRONMENT AS CE WHERE CC.SYSTEM_CODE = CE.REFCODE AND CE.SYSTEM_NAME = 'Tanda' AND CE.FLAG = 1 );	
		
		
		SET OutputLocalEnvironment.Destination.REST.Request.Parameters."Authorization" = my_credentials.Item[1].SYSTEM_KEY;								
		SET OutputRoot.JSON.Data.data_stream_id = InputRoot.JSON.Data.id;
		SET OutputRoot.JSON.Data.data_streamable_type = 'Organisation';
		PROPAGATE TO TERMINAL 'out' ENVIRONMENT OutputLocalEnvironment MESSAGE OutputRoot;
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
