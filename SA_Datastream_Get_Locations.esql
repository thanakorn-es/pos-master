

CREATE COMPUTE MODULE SA_Datastream_Get_Locations
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE tmp ROW;
		-- tmp.ResultSetp[] = 
		SET OutputRoot.JSON.Data.ResultSet[] = (SELECT T.SITE_NUMBER,T.LOCATION_ID FROM Database.MINORDB.db2inst1.M_LOCATION AS T where T.LOCATION_ID IS NOT NULL AND T.LOCATION_ID not in (select TS.LOC_ID from Database.MINORDB.db2inst1.M_STORESTAT AS TS WHERE TS.DS_TYPE='sales'));
		PROPAGATE TO TERMINAL 'out' MESSAGE OutputRoot;
		
		SET OutputRoot.JSON.Data.ResultSet[] = (SELECT T.SITE_NUMBER,T.LOCATION_ID FROM Database.MINORDB.db2inst1.M_LOCATION AS T where T.LOCATION_ID IS NOT NULL AND T.LOCATION_ID not in (select TS.LOC_ID from Database.MINORDB.db2inst1.M_STORESTAT AS TS WHERE TS.DS_TYPE='transaction'));
		PROPAGATE TO TERMINAL 'out1' MESSAGE OutputRoot;
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
