swagger: "2.0"
info:
  title: "Tanda API"
  description: "API description in Markdown."
  version: "1.0.0"
host: staging.tanda.co
basePath: /api/v2
schemes:
- "https"
paths:
  /locations:
    get:
      summary: "Returns a list of locations."
      operationId: "getLocations"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
    post:
      operationId: "postLocations"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Insert a locations"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
        required: true
      - name: "body"
        required: true
        in: "body"
        schema:
          type: "object"
        description: "body_data"
  /locations/{id}:
    put:
      operationId: "putlocations"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Insert a locations"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
      - name: "id"
        in: "path"
        type: "integer"
      - name: "body"
        required: true
        in: "body"
        schema:
          type: "object"
        description: "body_data"
  /departments:
    get:
      summary: "Returns a list of departments."
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
        required: true
    post:
      operationId: "postdepartments"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Insert a locations"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
        required: true
      - name: "body"
        required: true
        in: "body"
        schema:
          type: "object"
        description: "body_data"
  /departments/{id}:
    put:
      operationId: "putdepartments"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Insert a locations"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
      - name: "id"
        in: "path"
        type: "integer"
      - name: "body"
        required: true
        in: "body"
        schema:
          type: "object"
        description: "body_data"
    delete:
      operationId: "deletedepartments"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Insert a locations"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
      - name: "id"
        in: "path"
        type: "integer"
  /users:
    get:
      summary: "Returns a list of users."
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
        required: true
    post:
      operationId: "postUsers"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Insert a locations"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
        required: true
      - name: "body"
        required: true
        in: "body"
        schema:
          type: "object"
        description: "body_data"
  /users/{id}:
    put:
      operationId: "putusers"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Insert a locations"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
      - name: "id"
        in: "path"
        type: "integer"
      - name: "body"
        required: true
        in: "body"
        schema:
          type: "object"
        description: "body_data"
    delete:
      operationId: "deleteusers"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Insert a locations"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
      - name: "id"
        in: "path"
        type: "integer"
  /datastreams:
    post:
      operationId: "CreateDataStream"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Create a datastream"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
        required: true
      - name: "body"
        required: true
        in: "body"
        schema:
          type: "object"
        description: "body_data"
  /datastreamjoins:
    post:
      operationId: "CreateDataStreamJoin"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Create a datastreamjoin"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
        required: true
      - name: "body"
        required: true
        in: "body"
        schema:
          type: "object"
        description: "body_data"
  /storestats/for_datastream:
    post:
      operationId: "CreateStorestatistics"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Submit Store Statistics"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
        required: true
      - in: path
        name: id
        type: number
        description: The datastream_id for being a container.
        required: true
      - name: "body"
        required: true
        in: "body"
        schema:
          type: "object"
        description: "body_data"
  /clockins:
    post:
      operationId: "ClockInOut"
      responses:
        200:
          description: "The operation was successful."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: "Submit Clock in/out"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
        required: true
      - name: "body"
        required: true
        in: "body"
        schema:
          type: "object"
        description: "body_data"
  /schedules:
    get:
      summary: ''
      description: ''
      consumes: 
        - application/json
      produces: 
        - application/json
      parameters:
        - name: "Authorization"
          in: "header"
          type: "string"
          required: true
        - in: query
          name: users_ids
          type: integer
          description: 'User ID'
        - in: query
          name: from
          type: string
          description: ''
        - in: query
          name: to
          type: string
          description: ''
      responses:
        200:
          description: OK
  /rosters/current:
    get:
      summary: ''
      description: ''
      consumes: 
        - application/json
      produces: 
        - application/json
      parameters:
        - name: "Authorization"
          in: "header"
          type: "string"
          required: true
      responses:
        200:
          description: OK
  /shifts:
    get:
      summary: ""
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        type: "string"
        required: true
      - name: "from"
        in: "query"
        type: "string"
      - name: "to"
        in: "query"
        type: "string"
      - name: "show_costs"
        in: "query"
        type: "string"
      - name: "user_ids"
        in: "query"
        type: "string"
      responses:
        200:
          description: "OK"
          